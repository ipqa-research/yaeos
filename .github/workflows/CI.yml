name: CI
on: [push]

jobs:
  Build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        gcc_v: [10] # Version of GFortran we want to use.
        python-version: [3.9]
    env:
      FC: gfortran-${{ matrix.gcc_v }}
      GCC_V: ${{ matrix.gcc_v }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: false

    - name: Install Python
      uses: actions/setup-python@v1 # Use pip to install latest CMake, & FORD/Jin2For, etc.
      with:
        python-version: ${{ matrix.python-version }}

    - name: Setup Graphviz
      uses: ts-graphviz/setup-graphviz@v1

    - name: Setup Fortran Package Manager
      uses: fortran-lang/setup-fpm@v4
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install Python dependencies
      if: contains( matrix.os, 'ubuntu')
      run: |
        python -m pip install --upgrade pip
        pip install ford numpy matplotlib gcovr numpy scipy
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Install GFortran Linux
      if: contains( matrix.os, 'ubuntu')
      run: |
        sudo apt-get install lcov
        sudo update-alternatives \
           --install /usr/bin/gcc gcc /usr/bin/gcc-${{ matrix.gcc_v }} 100 \
           --slave /usr/bin/gfortran gfortran /usr/bin/gfortran-${{ matrix.gcc_v }} \
           --slave /usr/bin/gcov gcov /usr/bin/gcov-${{ matrix.gcc_v }}

    - name: Install NLopt
      run:
        sudo apt-get install libnlopt-dev

    - name: Compile
      run: fpm build --profile release

    - name: Run tests
      run: |
        fpm test --profile debug --flag -coverage
        bash ci/ci.sh
    
    - name: Coverage
      run: bash ci/ci.sh coverage

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4.0.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: ipqa-research/yaeos
